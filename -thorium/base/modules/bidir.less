
// these mixins allow you to simply designate horizontal margins and
// paddings that will flip depending on reading direction.

// start = The direction the reading direction starts.
// end = The direction the reading direction ends.




.margin-start(@l) {
	html[dir='ltr'] & { margin-left: @l; }
	html[dir='rtl'] & { margin-right: @l; }
}

.margin-end(@l) {
	html[dir='ltr'] & { margin-right: @l; }
	html[dir='rtl'] & { margin-left: @l; }
}



.padding-start(@l) {
	html[dir='ltr'] & { padding-left: @l; }
	html[dir='rtl'] & { padding-right: @l; }
}

.padding-end(@l) {
	html[dir='ltr'] & { padding-right: @l; }
	html[dir='rtl'] & { padding-left: @l; }
}




.text-align-start {
	// a substitution for text-align: start;
	// until it becomes widely available.
	html[dir='ltr'] & { text-align: left; }
	html[dir='rtl'] & { text-align: right; }
}

.text-align-end {
	// a substitution for text-align: end;
	// until it becomes widely available.
	html[dir='ltr'] & { text-align: right; }
	html[dir='rtl'] & { text-align: left; }
}
